#!/usr/bin/env python3

#                       rhc_media - Mario no Gourmetrace
#                        Copyright (C) 2020  devwizard
#         This project is licensed under the terms of the GNU General
#         Public License version 2.  See LICENSE for more information.

import sys
import struct

stdout = sys.stdout
sys.stdout = open("/dev/null", "w")
import pygame
sys.stdout.close()
sys.stdout = stdout
del stdout

fmt_table = {
    "rgba16": (
        8, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%04X,0x%04X," % (
            (r0 << 8 & 0xF800) |
            (g0 << 3 & 0x07C0) |
            (b0 >> 2 & 0x003E) |
            (a0 >> 7 & 0x0001),
            (r1 << 8 & 0xF800) |
            (g1 << 3 & 0x07C0) |
            (b1 >> 2 & 0x003E) |
            (a1 >> 7 & 0x0001),
        ),
    ),
    "rgba32": (
        4, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%08X,0x%08X," % (
            (r0 << 24 & 0xFF000000) |
            (g0 << 16 & 0x00FF0000) |
            (b0 <<  8 & 0x0000FF00) |
            (a0 <<  0 & 0x000000FF),
            (r1 << 24 & 0xFF000000) |
            (g1 << 16 & 0x00FF0000) |
            (b1 <<  8 & 0x0000FF00) |
            (a1 <<  0 & 0x000000FF),
        ),
    ),
    "ia4": (
        16, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%02X," % (
            (((r0+g0+b0)//3) >> 0 & 0xE0) | (a0 >> 3 & 0x10) |
            (((r1+g1+b1)//3) >> 4 & 0x0E) | (a1 >> 7 & 0x01)
        ),
    ),
    "ia8": (
        8, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%02X,0x%02X," % (
            (((r0+g0+b0)//3) >> 0 & 0xF0) | (a0 >> 4 & 0x0F),
            (((r1+g1+b1)//3) >> 0 & 0xF0) | (a1 >> 4 & 0x0F),
        ),
    ),
    "ia16": (
        8, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%04X,0x%04X," % (
            (r0+g0+b0)//3, a0,
            (r1+g1+b1)//3, a1,
        ),
    ),
    "i4": (
        16, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%02X," % (
            (((r0+g0+b0)//3) >> 0 & 0xF0) |
            (((r1+g1+b1)//3) >> 4 & 0x0F)
        ),
    ),
    "i8": (
        8, lambda r0, g0, b0, a0, r1, g1, b1, a1: "0x%02X,0x%02X," % (
            (r0+g0+b0)//3,
            (r1+g1+b1)//3,
        ),
    ),
}

def main(argc, argv):
    if argc != 4:
        print("usage: %s <output> <input> <format>" % argv[0])
        return 1
    data = pygame.image.tostring(pygame.image.load(argv[2]), "RGBA")
    data = [
        struct.unpack(">BBBBBBBB", data[i:i+8])
        for i in range(0, len(data), 8)
    ]
    n, fmt = fmt_table[argv[3]]
    buf = ""
    for i in range(0, len(data), n):
        for r0, g0, b0, a0, r1, g1, b1, a1 in data[i:i+n]:
            buf += fmt(r0, g0, b0, a0, r1, g1, b1, a1)
        buf += "\n"
    with open(argv[1], "w") as f:
        f.write(buf)
    return 0

if __name__ == "__main__":
    sys.exit(main(len(sys.argv), sys.argv))
